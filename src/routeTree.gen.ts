/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as UsersUsernameRouteImport } from './routes/users.$username'
import { Route as SitemapXmlRouteImport } from './routes/sitemap.xml'
import { Route as PollsPollIdRouteImport } from './routes/polls.$pollId'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const UsersUsernameRoute = UsersUsernameRouteImport.update({
  id: '/users/$username',
  path: '/users/$username',
  getParentRoute: () => rootRouteImport,
} as any)
const SitemapXmlRoute = SitemapXmlRouteImport.update({
  id: '/sitemap/xml',
  path: '/sitemap/xml',
  getParentRoute: () => rootRouteImport,
} as any)
const PollsPollIdRoute = PollsPollIdRouteImport.update({
  id: '/polls/$pollId',
  path: '/polls/$pollId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/polls/$pollId': typeof PollsPollIdRoute
  '/sitemap/xml': typeof SitemapXmlRoute
  '/users/$username': typeof UsersUsernameRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/polls/$pollId': typeof PollsPollIdRoute
  '/sitemap/xml': typeof SitemapXmlRoute
  '/users/$username': typeof UsersUsernameRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/polls/$pollId': typeof PollsPollIdRoute
  '/sitemap/xml': typeof SitemapXmlRoute
  '/users/$username': typeof UsersUsernameRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/polls/$pollId' | '/sitemap/xml' | '/users/$username'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/polls/$pollId' | '/sitemap/xml' | '/users/$username'
  id: '__root__' | '/' | '/polls/$pollId' | '/sitemap/xml' | '/users/$username'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PollsPollIdRoute: typeof PollsPollIdRoute
  SitemapXmlRoute: typeof SitemapXmlRoute
  UsersUsernameRoute: typeof UsersUsernameRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/users/$username': {
      id: '/users/$username'
      path: '/users/$username'
      fullPath: '/users/$username'
      preLoaderRoute: typeof UsersUsernameRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sitemap/xml': {
      id: '/sitemap/xml'
      path: '/sitemap/xml'
      fullPath: '/sitemap/xml'
      preLoaderRoute: typeof SitemapXmlRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/polls/$pollId': {
      id: '/polls/$pollId'
      path: '/polls/$pollId'
      fullPath: '/polls/$pollId'
      preLoaderRoute: typeof PollsPollIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PollsPollIdRoute: PollsPollIdRoute,
  SitemapXmlRoute: SitemapXmlRoute,
  UsersUsernameRoute: UsersUsernameRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
